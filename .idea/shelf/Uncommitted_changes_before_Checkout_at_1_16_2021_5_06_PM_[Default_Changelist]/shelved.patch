Index: TeamCode/src/main/java/org/firstinspires/ftc/teamcode/casper/casperAutonomousV1.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.firstinspires.ftc.teamcode.casper;\n\nimport com.acmerobotics.roadrunner.geometry.Pose2d;\nimport com.acmerobotics.roadrunner.geometry.Vector2d;\nimport com.acmerobotics.roadrunner.trajectory.Trajectory;\nimport com.qualcomm.robotcore.eventloop.opmode.Autonomous;\n\nimport com.qualcomm.robotcore.eventloop.opmode.Disabled;\nimport com.qualcomm.robotcore.eventloop.opmode.LinearOpMode;\nimport com.qualcomm.robotcore.eventloop.opmode.TeleOp;\n\nimport org.firstinspires.ftc.robotcore.external.ClassFactory;\nimport org.firstinspires.ftc.robotcore.external.hardware.camera.WebcamName;\nimport org.firstinspires.ftc.robotcore.external.navigation.VuforiaLocalizer;\nimport org.firstinspires.ftc.robotcore.external.tfod.Recognition;\nimport org.firstinspires.ftc.robotcore.external.tfod.TFObjectDetector;\n\nimport java.util.List;\n\n@Autonomous(group = \"robot\")\npublic class casperAutonomousV1 extends casperAutonomousBase {\n\n\n    @Override\n    public void runOpMode() throws InterruptedException {\n        robot = new casperMecanumDrive(hardwareMap);\n\n        robot.initVuforia(hardwareMap);\n        robot.initTfod(hardwareMap);\n\n        Pose2d startPose = new Pose2d(-56, -48, Math.toRadians(90));\n        robot.setPoseEstimate(startPose);\n        //origin at middle of full field(0,0)\n        //starting position down red (-60, -48, 90)\n\n        //rings red located at (-24, -36)\n        //position for shooting at (-12, -51)\n        // position 4 square at (58, -58)\n\n        waitForStart();\n\n        //int position = 4;7\n        if (isStopRequested()) return;\n        //detecting the rings sonia reesa code\n        //while (opModeIsActive()) {\n           int pos = getNumRings(1000); //ms\n            telemetry.addData(\">\", \"Num of rings = %d\", pos);\n            telemetry.update();\n            sleep(5000);\n        //}\n/*\n        Trajectory traj1 = robot.trajectoryBuilder(startPose)\n                //.lineToLinearHeading(new Pose2d(-36, -55, Math.toRadians(0)))\n                .splineTo(new Vector2d(-36, -55), Math.toRadians(0))\n                .splineTo(new Vector2d(50, -50), Math.toRadians(45))\n                .build();\n        robot.followTrajectory(traj1);\n\n        moveWobbleGoal(WOBBLE_GOAL_DOWN);\n        moveWobbleGoal(WOBBLE_GOAL_UP);\n\n     Trajectory traj2 = robot.trajectoryBuilder(traj1.end())\n                //.lineToLinearHeading(new Pose2d(-36, -55, Math.toRadians(0)))\n                .splineTo(new Vector2d(-12, -51), Math.toRadians(170))\n                .build();\n        robot.shootMotorLeft.setPower(0.7);\n        robot.followTrajectory(traj2);\n        robot.autonomousShoot();\n        sleep(5000);\n        robot.stopAllMotors();\n\n        Trajectory traj3 = robot.trajectoryBuilder(traj2.end())\n                //.lineToLinearHeading(new Pose2d(-36, -55, Math.toRadians(0)))\n                //.splineTo(new Vector2d(-28, -24), Math.toRadians(270))\n                .lineToSplineHeading(new Pose2d(-25, -24, Math.toRadians(270)))\n                .build();\n        robot.followTrajectory(traj3);\n\n        moveWobbleGoal(WOBBLE_GOAL_DOWN);\n\n        Trajectory traj4 = robot.trajectoryBuilder(traj3.end())\n                //.lineToLinearHeading(new Pose2d(-36, -55, Math.toRadians(0)))\n                .strafeRight(8)\n                .build();\n        robot.followTrajectory(traj4);\n\n        robot.closeWobbleClaw();\n        sleep(1000);\n        moveWobbleGoal(WOBBLE_GOAL_UP);\n        sleep(500);\n        Trajectory traj5 = robot.trajectoryBuilder(traj4.end())\n                //.lineToLinearHeading(new Pose2d(-36, -55, Math.toRadians(0)))\n                .splineTo(new Vector2d(50, -50), Math.toRadians(45))\n                .build();\n        robot.followTrajectory(traj5);\n        moveWobbleGoal(WOBBLE_GOAL_DOWN);\n        moveWobbleGoal(WOBBLE_GOAL_UP);\n        Trajectory traj6 = robot.trajectoryBuilder(traj5.end())\n                //.lineToLinearHeading(new Pose2d(-36, -55, Math.toRadians(0)))\n                //.splineTo(new Vector2d(-28, -24), Math.toRadians(270))\n                .lineToSplineHeading(new Pose2d(12, -40, Math.toRadians(90)))\n                .build();\n        robot.followTrajectory(traj6);\n*/\n        //robot.stopAllMotors();\n/*\n        if (position == 0) {\n            Trajectory traj2 = robot.trajectoryBuilder(startPose)\n                    .splineTo(new Vector2d(-6, -36), Math.toRadians(90))\n                    .build();\n            robot.followTrajectory(traj2);\n        } else if (position == 1) {\n            Trajectory traj2 = robot.trajectoryBuilder(startPose)\n                    .splineTo(new Vector2d(24, -12), Math.toRadians(90))\n                    .build();\n            robot.followTrajectory(traj2);\n        } else if (position == 4) {\n            Trajectory traj2 = robot.trajectoryBuilder(startPose)\n                    .splineTo(new Vector2d(58, -58), Math.toRadians(90))\n                    .build();\n            robot.followTrajectory(traj2);\n        }\n        //traj3 in position to shoot rings into the upper target, and then return to get wobble\n        Trajectory traj3 = robot.trajectoryBuilder(traj1.end())\n                .splineTo(new Vector2d(9, 22), Math.toRadians(202))\n                .build();\n        robot.followTrajectory(traj3);\n\n\n        Trajectory traj4 = robot.trajectoryBuilder(traj3.end())\n                .splineTo(new Vector2d(-30, -4), Math.toRadians(-90))\n                .build();\n        robot.followTrajectory(traj4);\n*/\n        robot.deinitTfod();\n    }\n\n}\n\n\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- TeamCode/src/main/java/org/firstinspires/ftc/teamcode/casper/casperAutonomousV1.java	(revision d3b0f69a9b94decbd9f7cc254fda5e9b861a341b)
+++ TeamCode/src/main/java/org/firstinspires/ftc/teamcode/casper/casperAutonomousV1.java	(date 1610845542696)
@@ -48,7 +48,7 @@
             telemetry.update();
             sleep(5000);
         //}
-/*
+
         Trajectory traj1 = robot.trajectoryBuilder(startPose)
                 //.lineToLinearHeading(new Pose2d(-36, -55, Math.toRadians(0)))
                 .splineTo(new Vector2d(-36, -55), Math.toRadians(0))
@@ -101,7 +101,7 @@
                 .lineToSplineHeading(new Pose2d(12, -40, Math.toRadians(90)))
                 .build();
         robot.followTrajectory(traj6);
-*/
+
         //robot.stopAllMotors();
 /*
         if (position == 0) {
