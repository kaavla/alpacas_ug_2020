Index: TeamCode/src/main/java/org/firstinspires/ftc/teamcode/casper/casperAuto0rings.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.firstinspires.ftc.teamcode.casper;\r\n\r\nimport com.acmerobotics.roadrunner.geometry.Pose2d;\r\nimport com.acmerobotics.roadrunner.geometry.Vector2d;\r\nimport com.acmerobotics.roadrunner.trajectory.Trajectory;\r\nimport com.qualcomm.robotcore.eventloop.opmode.Autonomous;\r\n\r\nimport static org.firstinspires.ftc.teamcode.casper.casperAutonomousBase.wobbleGoalMode.WOBBLE_GOAL_DOWN;\r\nimport static org.firstinspires.ftc.teamcode.casper.casperAutonomousBase.wobbleGoalMode.WOBBLE_GOAL_UP;\r\n\r\n\r\n@Autonomous(group = \"robot\")\r\npublic class casperAuto0rings extends casperAutonomousBase {\r\n    @Override\r\n\r\n    public void runOpMode() throws InterruptedException {\r\n        robot = new casperMecanumDrive(hardwareMap);\r\n\r\n        Pose2d startPose = new Pose2d(-56, -48, Math.toRadians(90));\r\n        robot.setPoseEstimate(startPose);\r\n        //origin at middle of full field(0,0)\r\n        //starting position down red (-60, -48, 90)\r\n\r\n        //rings red located at (-24, -36)\r\n        //position for shooting at (-12, -51)\r\n        // position 4 square at (58, -58)\r\n\r\n        waitForStart();\r\n\r\n        //int position = 4;\r\n\r\n        if (isStopRequested()) return;\r\n\r\n\r\n\r\n        Trajectory traj1 = robot.trajectoryBuilder(startPose)\r\n                //.lineToLinearHeading(new Pose2d(-36, -55, Math.toRadians(0)))\r\n                .splineTo(new Vector2d(-36, -55), Math.toRadians(0))\r\n                .splineTo(new Vector2d(0, -50), Math.toRadians(45))\r\n                .build();\r\n        robot.followTrajectory(traj1);\r\n\r\n        moveWobbleGoal(WOBBLE_GOAL_DOWN);\r\n        moveWobbleGoal(WOBBLE_GOAL_UP);\r\n        robot.shootMotorLeft.setPower(0.7);\r\n\r\n        Trajectory traj2 = robot.trajectoryBuilder(traj1.end())\r\n                //.lineToLinearHeading(new Pose2d(-36, -55, Math.toRadians(0)))\r\n                .splineTo(new Vector2d(-12, -51), Math.toRadians(170))\r\n                .build();\r\n        robot.shootMotorLeft.setPower(0.7);\r\n        robot.followTrajectory(traj2);\r\n        robot.autonomousShoot();\r\n        sleep(5000);\r\n        robot.stopAllMotors();\r\n\r\n        Trajectory traj3 = robot.trajectoryBuilder(traj2.end())\r\n                //.lineToLinearHeading(new Pose2d(-36, -55, Math.toRadians(0)))\r\n                //.splineTo(new Vector2d(-28, -24), Math.toRadians(270))\r\n                .lineToSplineHeading(new Pose2d(-25, -24, Math.toRadians(270)))\r\n                .build();\r\n        robot.followTrajectory(traj3);\r\n\r\n        moveWobbleGoal(WOBBLE_GOAL_DOWN);\r\n\r\n        Trajectory traj4 = robot.trajectoryBuilder(traj3.end())\r\n                //.lineToLinearHeading(new Pose2d(-36, -55, Math.toRadians(0)))\r\n                .strafeRight(8)\r\n                .build();\r\n        robot.followTrajectory(traj4);\r\n\r\n        robot.closeWobbleClaw();\r\n        sleep(1000);\r\n        moveWobbleGoal(WOBBLE_GOAL_UP);\r\n        sleep(500);\r\n        Trajectory traj5 = robot.trajectoryBuilder(traj4.end())\r\n                //.lineToLinearHeading(new Pose2d(-36, -55, Math.toRadians(0)))\r\n                .splineTo(new Vector2d(0, -50), Math.toRadians(45))\r\n                .build();\r\n        robot.followTrajectory(traj5);\r\n        moveWobbleGoal(WOBBLE_GOAL_DOWN);\r\n        moveWobbleGoal(WOBBLE_GOAL_UP);\r\n        Trajectory traj6 = robot.trajectoryBuilder(traj5.end())\r\n                //.lineToLinearHeading(new Pose2d(-36, -55, Math.toRadians(0)))\r\n                //.splineTo(new Vector2d(-28, -24), Math.toRadians(270))\r\n                .lineToSplineHeading(new Pose2d(12, -40, Math.toRadians(90)))\r\n                .build();\r\n        robot.followTrajectory(traj6);\r\n\r\n        //robot.stopAllMotors();\r\n/*\r\n        if (position == 0) {\r\n            Trajectory traj2 = robot.trajectoryBuilder(startPose)\r\n                    .splineTo(new Vector2d(-6, -36), Math.toRadians(90))\r\n                    .build();\r\n            robot.followTrajectory(traj2);\r\n        } else if (position == 1) {\r\n            Trajectory traj2 = robot.trajectoryBuilder(startPose)\r\n                    .splineTo(new Vector2d(24, -12), Math.toRadians(90))\r\n                    .build();\r\n            robot.followTrajectory(traj2);\r\n        } else if (position == 4) {\r\n            Trajectory traj2 = robot.trajectoryBuilder(startPose)\r\n                    .splineTo(new Vector2d(58, -58), Math.toRadians(90))\r\n                    .build();\r\n            robot.followTrajectory(traj2);\r\n        }\r\n        //traj3 in position to shoot rings into the upper target, and then return to get wobble\r\n        Trajectory traj3 = robot.trajectoryBuilder(traj1.end())\r\n                .splineTo(new Vector2d(9, 22), Math.toRadians(202))\r\n                .build();\r\n        robot.followTrajectory(traj3);\r\n\r\n\r\n        Trajectory traj4 = robot.trajectoryBuilder(traj3.end())\r\n                .splineTo(new Vector2d(-30, -4), Math.toRadians(-90))\r\n                .build();\r\n        robot.followTrajectory(traj4);\r\n*/\r\n    }\r\n\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- TeamCode/src/main/java/org/firstinspires/ftc/teamcode/casper/casperAuto0rings.java	(revision 62dcd4ad9193226578611c60f5dff5ffe4263a69)
+++ TeamCode/src/main/java/org/firstinspires/ftc/teamcode/casper/casperAuto0rings.java	(date 1611017119234)
@@ -41,14 +41,14 @@
         robot.followTrajectory(traj1);
 
         moveWobbleGoal(WOBBLE_GOAL_DOWN);
+        sleep(400);
         moveWobbleGoal(WOBBLE_GOAL_UP);
-        robot.shootMotorLeft.setPower(0.7);
+        robot.shootMotorLeft.setPower(0.8);
 
         Trajectory traj2 = robot.trajectoryBuilder(traj1.end())
                 //.lineToLinearHeading(new Pose2d(-36, -55, Math.toRadians(0)))
                 .splineTo(new Vector2d(-12, -51), Math.toRadians(170))
                 .build();
-        robot.shootMotorLeft.setPower(0.7);
         robot.followTrajectory(traj2);
         robot.autonomousShoot();
         sleep(5000);
@@ -57,7 +57,7 @@
         Trajectory traj3 = robot.trajectoryBuilder(traj2.end())
                 //.lineToLinearHeading(new Pose2d(-36, -55, Math.toRadians(0)))
                 //.splineTo(new Vector2d(-28, -24), Math.toRadians(270))
-                .lineToSplineHeading(new Pose2d(-25, -24, Math.toRadians(270)))
+                .lineToSplineHeading(new Pose2d(-25, -29, Math.toRadians(270)))
                 .build();
         robot.followTrajectory(traj3);
 
@@ -65,7 +65,7 @@
 
         Trajectory traj4 = robot.trajectoryBuilder(traj3.end())
                 //.lineToLinearHeading(new Pose2d(-36, -55, Math.toRadians(0)))
-                .strafeRight(8)
+                .strafeRight(9)
                 .build();
         robot.followTrajectory(traj4);
 
